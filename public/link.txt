https://www.thegreatcodeadventure.com/jwt-authentication-with-react-redux/
https://github.com/SophieDeBenedetto/catbook-redux/blob/blog-post/src/reducers/catReducer.js

https://www.npmjs.com/package/translate-components
https://hjnilsson.com/2016/02/29/working-with-translations-in-react/


export class UsersModule {
    constructor(translate: TranslateService) {
        let lang = CONFIG['LANGUAGES'];
        let i18n = require(`./i18n/${lang}.json`);

        translate.setTranslation(lang, i18n, true);
    }
}




https://www.npmjs.com/package/babel-plugin-syntax-dynamic-import



https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage
https://techblog.appnexus.com/five-tips-for-working-with-redux-in-large-applications-89452af4fdcb

https://adrianarlett.gitbooks.io/idiomatic-redux-by-dan-abramov/content/persisting-the-state-to-the-local-storage.html

https://blog.logrocket.com/building-a-custom-dropdown-menu-component-for-react-e94f02ced4a1
https://tympanus.net/Tutorials/CustomDropDownListStyling/index5.html


//////////////////////////////////////
import React, { Component } from 'react';
import '../../styles/css/dropDown.css';

class Dropdown extends Component {
  constructor(props) {
    super(props);
    const { title } = this.props;
    this.state = {
      listOpen: false,
      headerTitle: title,
    };
  }

  handleClickOutside() {
    this.setState({
      listOpen: false,
    });
  }

  toggleList() {
    this.setState(prevState => ({
      listOpen: !prevState.listOpen,
    }));
  }

  render() {
    const { list } = this.props;
    const { listOpen, headerTitle } = this.state;
    return (
      <div className="dd-wrapper">
        <div className="dd-header" onClick={() => this.toggleList()} role="presentation">
          <div className="dd-header-title">{headerTitle}</div>
          {/* {listOpen
          ? <FontAwesome name="angle-up" size="2x" />
          : <FontAwesome name="angle-down" size="2x" />
          } */}
        </div>
        {listOpen && list && (
        <ul className="dd-list">
          {list.map(item => (
            <li className="dd-list-item" key={item.id}>{item.title}</li>
          ))}
        </ul>
        )}
      </div>
    );
  }
}

export default Dropdown;

