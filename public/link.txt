https://codesandbox.io/s/00254q4n6p
https://codesandbox.io/s/q5zz377m4
https://assortment.io/posts/accessible-modal-component-react-portals-part-1
https://codepen.io/davidgilbertson/pen/ooXVyw

https://codeburst.io/modals-in-react-f6c3ff9f4701
https://codepen.io/a-mt/pen/pWBbrx
https://codepen.io/gaearon/pen/yzMaBd

https://codepen.io/jtsharpsite/pen/gorvjR





https://www.youtube.com/watch?v=ea9KyE78qKI
https://www.youtube.com/watch?v=Ins-7Ze29IQ

https://auth0.com/authenticate/react/google/
https://github.com/davidtran/react-facebook-javascript-sdk-login
https://stackoverflow.com/questions/27717555/implement-facebook-api-login-with-reactjs
https://stackoverflow.com/questions/43848100/login-with-google-on-react-app-using-a-react-component
https://stackoverflow.com/questions/43617815/how-to-get-google-authentication-to-work-with-reactjs
https://developers.google.com/identity/protocols/OAuth2UserAgent

https://www.thegreatcodeadventure.com/jwt-authentication-with-react-redux/
https://github.com/SophieDeBenedetto/catbook-redux/blob/blog-post/src/reducers/catReducer.js

https://www.npmjs.com/package/translate-components
https://hjnilsson.com/2016/02/29/working-with-translations-in-react/


export class UsersModule {
    constructor(translate: TranslateService) {
        let lang = CONFIG['LANGUAGES'];
        let i18n = require(`./i18n/${lang}.json`);

        translate.setTranslation(lang, i18n, true);
    }
}




https://www.npmjs.com/package/babel-plugin-syntax-dynamic-import



https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage
https://techblog.appnexus.com/five-tips-for-working-with-redux-in-large-applications-89452af4fdcb

https://adrianarlett.gitbooks.io/idiomatic-redux-by-dan-abramov/content/persisting-the-state-to-the-local-storage.html

https://blog.logrocket.com/building-a-custom-dropdown-menu-component-for-react-e94f02ced4a1
https://tympanus.net/Tutorials/CustomDropDownListStyling/index5.html


//////////////////////////////////////
http://sebastianpontow.de/css2compass/



https://codeburst.io/lazy-loading-in-react-using-react-lazy-load-package-9bf65f6a8027
https://www.npmjs.com/package/react-list-lazy-load


https://github.com/saigowthamr/Itunes-Top-100-albums/tree/master/src/components

https://codeburst.io/lazy-loading-in-react-using-react-lazy-load-package-9bf65f6a8027
////////////////////////////////////////////////////
<table id="customers">
<thead><tr>
  <th>Company</th>
  <th>Contact</th>
</tr>
</thead>
<tbody>
<tr>
<td>Alfreds Futterkiste</td>
<td>Maria Anders</td>

</tr>


</tbody></table>
////////////
table#customers {
    font-size: 16px;
    font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
    border-collapse: collapse;
    border-spacing: 0;
    width: 100%;
}

tbody {
    display: table-row-group;
    vertical-align: middle;
    border-color: inherit;}
    tr {
    
    display: table-row;
    vertical-align: inherit;
    border-color: inherit;
}

#customers th {
    padding-top: 11px;
    padding-bottom: 11px;
    background-color: #4CAF50;
    color: white;
}

#customers td, #customers th {
    /* border: 1px solid #ddd; */
    text-align: left;
    padding: 8px;
}
#customers td:first-child {
  width:70%
}
#customers tr:nth-child(2) {
  border: 1px solid #ddd;
}

/////
https://www.youtube.com/watch?v=JicUNpwLzLY
https://www.youtube.com/watch?v=c4_O8V6GTA8
http://www.aztutorialz.com/auto-load-react-components-scroll/
////////////////////////////////
https://reacttraining.com/react-router/web/example/auth-workflow

/////////////////////////////////////

const API_KEY = '795221149349-s62j7hb3cqpfm4korqv4fs9qk3dmcfqs.apps.googleusercontent.com';

import React, { Component } from 'react';

class App extends Component {

  loadYoutubeApi() {
    const script = document.createElement("script");
    script.src = "https://apis.google.com/js/client.js";

    script.onload = () => {
      gapi.load('client', () => {
        gapi.client.setApiKey(API_KEY);
        gapi.client.load('youtube', 'v3', () => {
          this.setState({ gapiReady: true });
        });
      });
    };

    document.body.appendChild(script);
  }

  componentDidMount() {
    this.loadYoutubeApi();
  }

  render() {
    if (this.state.gapiReady) {
     return (
       <h1>GAPI is loaded and ready to use.</h1>
     );
  };
}

export default App;



https://developers.google.com/api-client-library/javascript/reference/referencedocs
    
